{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/apiDirectory.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/fileStreamer.ts","webpack:///./src/app/upload/dialog/dialog.component.css","webpack:///./src/app/upload/dialog/dialog.component.html","webpack:///./src/app/upload/dialog/dialog.component.ts","webpack:///./src/app/upload/upload.component.css","webpack:///./src/app/upload/upload.component.html","webpack:///./src/app/upload/upload.component.ts","webpack:///./src/app/upload/upload.module.ts","webpack:///./src/app/upload/upload.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class ApiDirectory {\r\n    url;\r\n    constructor(){\r\n        this.url = {\r\n            fileDetails: \"api/fileDetails\",\r\n            fileUpload: \"api/fileUpload\",\r\n            folders: \"api/folders\",\r\n            fooUpload: \"api/fooUpload\"\r\n        }\r\n    }\r\n    getApiDirectory(endpoint){\r\n        return this.url[endpoint];\r\n    }\r\n}","module.exports = \"#progress_bar{\\r\\n    height: 10px;\\r\\n    margin-top: 20px;\\r\\n    width: 0%;\\r\\n    background: #3C989E;\\r\\n}\"","module.exports = \"<!-- <ul>\\r\\n  <li *ngFor=\\\"let folder of folders\\\" (click)=\\\"getFoldersByParent(folder._id)\\\">{{folder.name}}</li>\\r\\n</ul>\\r\\n<li *ngFor=\\\"let power of powers\\\">{{power}}</li>\\r\\n<form #createFolderForm=\\\"ngForm\\\" (ngSubmit)=\\\"createFolder()\\\">\\r\\n  <label>Name</label>\\r\\n  <input type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Hero Name\\\" [(ngModel)]=\\\"form_folder_name\\\">\\r\\n  <input type=\\\"text\\\" name=\\\"powers\\\" placeholder=\\\"Hero powers\\\" [(ngModel)]=\\\"form_folder_powers\\\">\\r\\n  <input type=\\\"submit\\\" value=\\\"Submit\\\">\\r\\n</form>\\r\\n<br>\\r\\n<input type=\\\"file\\\" name=\\\"file\\\" placeholder=\\\"Hero Files\\\" (change)=\\\"changeFileEvent($event)\\\">\\r\\n<input type=\\\"button\\\" value=\\\"Upload File\\\" (click)=\\\"uploadFile()\\\">\\r\\n<div id=\\\"progress_bar\\\" [ngStyle]=\\\"{'width': progress}\\\"></div>\\r\\n<p>Progress: {{progress}}</p>\\r\\n<div *ngIf=\\\"errorObject.status == 404\\\">\\r\\n  <ul>\\r\\n    <li>Status: {{errorObject.status}}</li>\\r\\n    <li>Message: {{errorObject.message}}</li>\\r\\n    <li>Status Text: {{errorObject.statusText}}</li>\\r\\n    <li>Url: {{errorObject.url}}</li>\\r\\n  </ul>\\r\\n</div>\\r\\n<div class=\\\"slider\\\">\\r\\n  <img *ngFor=\\\"let img of images\\\" src=\\\"{{img}}\\\" alt=\\\"\\\" />\\r\\n</div> -->\\r\\n\\r\\n<app-upload></app-upload>\"","import { Component } from '@angular/core';\r\n\r\nimport { appService } from './app.service';\r\n\r\nimport { Result } from './result.interface';\r\n\r\nimport { FileStremer } from './fileStreamer';\r\n\r\nimport { ApiDirectory } from './apiDirectory';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  folders: Array<Result>;\r\n  powers: Array<String>;\r\n  images: Array<String> = [];\r\n  errorObject = {};\r\n  file:File;\r\n  _apiDirectory = new ApiDirectory();\r\n  form_folder_name:String = \"\";\r\n  form_folder_powers:String = \"\";\r\n\r\n  progress:String = \"0%\";\r\n\r\n  constructor(private _appService: appService) {\r\n    this.getRootFolders();\r\n  }\r\n  getRootFolders(){\r\n    this._appService.asynchronousGet(this._apiDirectory.getApiDirectory(\"folders\")).subscribe(\r\n      res => this.folders = res,\r\n      error => this.errorObject = error\r\n    );\r\n  }\r\n  getFoldersByParent(parent){\r\n    this._appService.asynchronousGet(this._apiDirectory.getApiDirectory(\"folders\") + '/' + parent).subscribe(\r\n      res => this.powers = res.powers,\r\n      error => this.errorObject = error\r\n    );\r\n  }\r\n  createFolder(){\r\n    var formData = {\r\n      name: this.form_folder_name,\r\n      powers: this.form_folder_powers\r\n    }\r\n    this._appService.asynchronousPost(this._apiDirectory.getApiDirectory(\"folders\"), formData).subscribe(\r\n      res => this.folders = res,\r\n      error => this.errorObject = error\r\n    );\r\n  }\r\n  changeFileEvent($event){\r\n    if($event.target.files[0]){\r\n      this.file = $event.target.files[0];\r\n    }\r\n    else{\r\n      console.log('please!');\r\n    }\r\n  }\r\n  async uploadFile(){\r\n    try{\r\n      this.progress = \"0%\";\r\n      const formData = {\r\n        fileSize: this.file.size,\r\n        fileName: this.file.name\r\n      }\r\n      const tokenId = await this._appService.synchronousPost(this._apiDirectory.getApiDirectory(\"fileDetails\"), formData);\r\n      \r\n      const fileStreamer = new FileStremer(this.file);\r\n      while(!fileStreamer.isEndOfFile()){\r\n        const data = await fileStreamer.readBlockAsBinaryString();\r\n        const formData = {\r\n          tokenId: tokenId,\r\n          fileContent: data[\"fileContent\"],\r\n          fileOffset: data[\"fileOffset\"]\r\n        }\r\n        this._appService.asynchronousPost(this._apiDirectory.getApiDirectory(\"fileUpload\"), formData).subscribe(\r\n          res => {\r\n            if(res[\"ok\"] == 0){\r\n              this.progress = res[\"percentComplete\"] + \"%\"\r\n            }\r\n          },\r\n          error => this.errorObject = error\r\n        );\r\n      } \r\n    }\r\n    catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { appService } from './app.service';\r\nimport { UploadModule } from './upload/upload.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    UploadModule\r\n  ],\r\n  providers: [appService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpRequest, HttpEventType, HttpResponse } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { _throw } from 'rxjs/observable/throw';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        \r\n    })\r\n}\r\n\r\n@Injectable()\r\nexport class appService {\r\n    result: any;\r\n    private handleError(error: HttpErrorResponse){\r\n        if(error.error && error.error instanceof ErrorEvent){\r\n            console.error('An error occurred:', error.error.message);\r\n        }\r\n        else{\r\n            console.error(\r\n                `Backend returned code ${error.status}, ` +\r\n                `body was: ${error.error}`);\r\n        }\r\n        return _throw({\r\n            message: error.message,\r\n            status: error.status,\r\n            statusText: error.statusText,\r\n            url: error.url\r\n        });\r\n    }\r\n    constructor(private _http: HttpClient){}\r\n    asynchronousGet(url):Observable<any>{\r\n        return this._http.get(url).pipe(\r\n            catchError(this.handleError)\r\n        );\r\n    };\r\n    synchronousGet(url):Promise<any>{\r\n        return new Promise((resolve, reject) => {\r\n            this._http.get(url).subscribe(\r\n                res => resolve(res),\r\n                error => reject(error)\r\n            )\r\n        })\r\n    }  \r\n    asynchronousPost(url, formData):Observable<any>{\r\n        return this._http.post(url, formData).pipe(\r\n            catchError(this.handleError)\r\n        )\r\n    }\r\n    synchronousPost(url, formData):Promise<any>{\r\n        return new Promise((resolve, reject) => {\r\n            this._http.post(url, formData).subscribe(\r\n                res => resolve(res),\r\n                error => reject(error)\r\n            );\r\n        })\r\n    }\r\n}","export class FileStremer{\r\n    file:File;\r\n    offset;\r\n    defaultChunkSize;\r\n    constructor(file){\r\n        this.file = file;\r\n        this.offset = 0;\r\n        this.defaultChunkSize = 4 * 1024; // bytes\r\n        this.rewind();\r\n    }\r\n    rewind(){\r\n        this.offset = 0;\r\n    }\r\n    isEndOfFile() {\r\n        return this.offset >= this.getFileSize();\r\n    }\r\n    readBlockAsBinaryString(length = this.defaultChunkSize){\r\n        const fileReader = new FileReader();\r\n        const blob = this.file.slice(this.offset, this.offset + length);\r\n        return new Promise((resolve, reject) => {\r\n            fileReader.onloadend = (event) => {\r\n                const target = (event.target);\r\n                if(target[\"error\"] == null){\r\n                    const result = target[\"result\"];\r\n                    this.offset += result.length;\r\n                    this.testEndOfFile();\r\n                    const data = {\r\n                        fileContent: result,\r\n                        fileOffset: this.offset\r\n                    }\r\n                    resolve(data);\r\n                }\r\n                else{\r\n                    reject(target[\"error\"]);\r\n                }\r\n            };\r\n            fileReader.readAsBinaryString(blob);\r\n        })\r\n    }\r\n    testEndOfFile(){\r\n        if(this.isEndOfFile()){\r\n            console.log(\"Done reading file\");\r\n        }\r\n    }\r\n    getFileSize(){\r\n        return this.file.size;\r\n    }\r\n}","module.exports = \".add-files-btn {\\r\\n    float: right;\\r\\n  }\\r\\n  \\r\\n  :host {\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    flex: 1;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .actions {\\r\\n    justify-content: flex-end;\\r\\n  }\\r\\n  \\r\\n  .container {\\r\\n    height: 100%;\\r\\n  }\"","module.exports = \"<input type=\\\"file\\\" #file style=\\\"display: none\\\" (change)=\\\"onFilesAdded()\\\" multiple />\\r\\n<div class=\\\"container\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-evenly stretch\\\">\\r\\n  <h1 mat-dialog-title>Upload Files</h1>\\r\\n  <div>\\r\\n    <button [disabled]=\\\"uploading || uploadSuccessful\\\" mat-raised-button color=\\\"primary\\\" class=\\\"add-files-btn\\\" (click)=\\\"addFiles()\\\">\\r\\n      Add Files\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <!-- This is the content of the dialog, containing a list of the files to upload -->\\r\\n  <mat-dialog-content fxFlex>\\r\\n    <mat-list>\\r\\n      <mat-list-item *ngFor=\\\"let file of files\\\">\\r\\n        <h4 mat-line>{{file.name}}</h4>\\r\\n        <mat-progress-bar *ngIf=\\\"progress\\\" mode=\\\"determinate\\\" [value]=\\\"progress[file.name].progress | async\\\"></mat-progress-bar>\\r\\n      </mat-list-item>\\r\\n    </mat-list>\\r\\n  </mat-dialog-content>\\r\\n\\r\\n  <!-- This are the actions of the dialog, containing the primary and the cancel button-->\\r\\n  <mat-dialog-actions class=\\\"actions\\\">\\r\\n    <button *ngIf=\\\"showCancelButton\\\" mat-button mat-dialog-close>Cancel</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!canBeClosed\\\" (click)=\\\"closeDialog()\\\">{{primaryButtonText}}</button>\\r\\n  </mat-dialog-actions>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { UploadService } from '../upload.service';\r\nimport { forkJoin } from 'rxjs/observable/forkjoin';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.css']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  @ViewChild('file') file;\r\n  progress;\r\n  canBeClosed = true; \r\n  primaryButtonText = 'Upload';\r\n  showCancelButton = true; \r\n  uploading = false;\r\n  uploadSuccessful = false;\r\n  constructor(public dialogRef: MatDialogRef<DialogComponent>, public uploadService: UploadService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  public files: Set<File> = new Set();\r\n\r\n  closeDialog() {\r\n    // if everything was uploaded already, just close the dialog\r\n    if (this.uploadSuccessful) {\r\n      return this.dialogRef.close();\r\n    }\r\n  \r\n    // set the component state to \"uploading\"\r\n    this.uploading = true;\r\n  \r\n    // start the upload and save the progress map\r\n    this.progress = this.uploadService.upload(this.files);\r\n  \r\n    // convert the progress map into an array\r\n    let allProgressObservables = [];\r\n    for (let key in this.progress) {\r\n      allProgressObservables.push(this.progress[key].progress);\r\n    }\r\n  \r\n    // Adjust the state variables\r\n  \r\n    // The OK-button should have the text \"Finish\" now\r\n    this.primaryButtonText = 'Finish';\r\n  \r\n    // The dialog should not be closed while uploading\r\n    this.canBeClosed = false;\r\n    this.dialogRef.disableClose = true;\r\n  \r\n    // Hide the cancel-button\r\n    this.showCancelButton = false;\r\n  \r\n    // When all progress-observables are completed...\r\n    forkJoin(allProgressObservables).subscribe(end => {\r\n      // ... the dialog can be closed again...\r\n      this.canBeClosed = true;\r\n      this.dialogRef.disableClose = false;\r\n  \r\n      // ... the upload was successful...\r\n      this.uploadSuccessful = true;\r\n  \r\n      // ... and the component is no longer uploading\r\n      this.uploading = false;\r\n    });\r\n  }\r\n  onFilesAdded() {\r\n    const files: { [key: string]: File } = this.file.nativeElement.files;\r\n    for (let key in files) {\r\n      if (!isNaN(parseInt(key))) {\r\n        this.files.add(files[key]);\r\n      }\r\n    }\r\n  }\r\n  addFiles() {\r\n    this.file.nativeElement.click();\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<button mat-raised-button (click)=\\\"openUploadDialog()\\\">Upload</button>\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { UploadService } from './upload.service';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n  constructor(public dialog: MatDialog, public uploadService: UploadService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public openUploadDialog() {\r\n    let dialogRef = this.dialog.open(DialogComponent, { width: '50%', height: '50%' });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UploadComponent } from './upload.component';\r\nimport { MatButtonModule, MatDialogModule, MatListModule, MatProgressBarModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { UploadService } from './upload.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule, MatDialogModule, MatListModule, MatProgressBarModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule, \r\n    HttpClientModule\r\n  ],\r\n  declarations: [UploadComponent, DialogComponent],\r\n  exports: [UploadComponent],\r\n  entryComponents: [DialogComponent],\r\n  providers: [UploadService]\r\n})\r\nexport class UploadModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient, HttpRequest, HttpEventType, HttpResponse } from \"@angular/common/http\";\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { ApiDirectory } from '../apiDirectory';\r\n\r\n@Injectable()\r\nexport class UploadService {\r\n\r\n  constructor(private http: HttpClient, private _apiDirectory: ApiDirectory) { }\r\n\r\n  public upload(files: Set<File>): {[key:string]:Observable<number>} {\r\n    // this will be the our resulting map\r\n    const status = {};\r\n\r\n    files.forEach(file => {\r\n      // create a new multipart-form for every file\r\n      const formData: FormData = new FormData();\r\n      formData.append('file', file, file.name);\r\n\r\n      // create a http-post request and pass the form\r\n      // tell it to report the upload progress\r\n      const req = new HttpRequest('POST', this._apiDirectory.getApiDirectory(\"fileUpload\"), formData, {\r\n        reportProgress: true\r\n      });\r\n\r\n      // create a new progress-subject for every file\r\n      const progress = new Subject<number>();\r\n\r\n      // send the http-request and subscribe for progress-updates\r\n      this.http.request(req).subscribe(event => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n\r\n          // calculate the progress percentage\r\n          const percentDone = Math.round(100 * event.loaded / event.total);\r\n\r\n          // pass the percentage into the progress-stream\r\n          progress.next(percentDone);\r\n        } else if (event instanceof HttpResponse) {\r\n\r\n          // Close the progress-stream if we get an answer form the API\r\n          // The upload is complete\r\n          progress.complete();\r\n        }\r\n      });\r\n\r\n      // Save every progress-observable in a map of all observables\r\n      status[file.name] = {\r\n        progress: progress.asObservable()\r\n      };\r\n    });\r\n\r\n    // return the map of progress.observables\r\n    return status;\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}